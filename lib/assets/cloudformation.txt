json = %q(
    {
      "AWSTemplateFormatVersion" : "2010-09-09",
      "Description" : "EC2 Instance with CodeDeploy Agent and ECS Agent",
      "Parameters" : {
        "InstanceType" : {
          "Description" : "EC2 instance type",
          "Type" : "String",
          "Default" : "t2.micro"
        }
      },
      "Resources" : {
        "RubyInstance": {
          "Type" : "AWS::EC2::Instance",
          "Properties" : {
            "ImageId" : "ami-ddc7b6b7",
            "InstanceType": {
              "Ref": "InstanceType"
            },
            "IamInstanceProfile" : "ecsInstanceRole",
            "SecurityGroups" : ["Kafka-Zookeeper"],
            "KeyName" : "davidrichey",
            "Tags" : [ {
                "Key": "demoappdeploy",
                "Value": "demoappdeploy"
              }
            ],
            "UserData": {
              "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash -ex\n",
                    "echo ECS_CLUSTER=)+cluster_name+%q( >> /etc/ecs/ecs.config\n",
                    "yum install -y docker\n",
                    "service docker start\n",
                    "usermod -a -G docker ec2-user\n",
                    "yum update -y aws-cfn-bootstrap\n",
                    "yum install -y aws-cli\n",
                    "# Helper function.\n",
                    "function error_exit\n",
                    "{\n",
                    "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\")+" '"+%q(",
                    {
                      "Ref": "WaitHandle"
                    },
                    "'\n",
                    "  exit 1\n",
                    "}\n",
                    "# Install the AWS CodeDeploy Agent.\n",
                    "cd /home/ec2-user/\n",
                    "aws s3 cp 's3://aws-codedeploy-us-east-1/latest/codedeploy-agent.noarch.rpm' . || error_exit 'Failed to download AWS CodeDeploy Agent.'\n",
                    "yum -y install codedeploy-agent.noarch.rpm || error_exit 'Failed to install AWS CodeDeploy Agent.' \n",
                    "/opt/aws/bin/cfn-init -s ",
                    {
                      "Ref": "AWS::StackId"
                    },
                    " -r LinuxEC2Instance --region ",
                    {
                      "Ref": "AWS::Region"
                    },
                    " || error_exit 'Failed to run cfn-init.'\n",
                    "# All is well, so signal success.\n",
                    "/opt/aws/bin/cfn-signal -e 0 -r \"AWS CodeDeploy Agent setup complete.\" ",
                    {
                      "Ref": "WaitHandle"
                    },
                    "'\n"
                  ]
                ]
              }
            }
          },
          "Metadata": {
            "AWS::CloudFormation::Init" : {
              "services": {
                "sysvint": {
                  "codedeploy-agent": {
                    "enabled": "true",
                    "ensureRunning": "true"
                  }
                }
              }
            }
          }
        },
        "WaitHandle": {
          "Type": "AWS::CloudFormation::WaitConditionHandle"
        }
      }
    }
      )